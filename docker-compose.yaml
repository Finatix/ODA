version: '3.8'

services:
  backend:
    profiles: [ "backend" ]
    container_name: backend
    build:
      context: backend
    restart: always
    ports:
      - "8080:8080"
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SPRING_PROFILES_ACTIVE: ${ENVIRONMENT:-prod}
      VDB_PASSWORD: ${VDB_PASSWORD}
      VDB_USER: ${VDB_USER}
      VDB_URL: milvus-standalone
      VDB_PORT: ${VDB_PORT:-19530}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_TABLE: ${DB_TABLE:-conversation}
      DB_URL: ${DB_URL:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DATAIMPORT_ENABLED: ${DATAIMPORT_ENABLED:-false}

  python-backend:
    build:
      context: server
    container_name: python-backend
    ports:
      - "8000:8000"
    profiles: [ "python-backend" ]
    restart: unless-stopped

  postgres:
    profiles: [ "postgres" ]
    container_name: postgres
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${DB_TABLE:-conversation}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT:-5432}:${DB_PORT:-5432}"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  etcd:
    profiles: [ "etcd" ]
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    restart: always
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - milvus-etcd-data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: [ "CMD", "etcdctl", "endpoint", "health" ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    profiles: [ "minio" ]
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    restart: always
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - minio-data:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    profiles: [ "milvus" ]
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.4.1
    restart: always
    command: [ "milvus", "run", "standalone" ]
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - milvus-data:/var/lib/milvus
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9091/healthz" ]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "${VDB_PORT:-19530}:${VDB_PORT:-19530}"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  caddy:
    profiles: [ "caddy" ]
    container_name: caddy
    image: caddy:2-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/caddy/Caddyfile:/etc/caddy/Caddyfile

volumes:
  postgres-data:
  milvus-etcd-data:
  milvus-data:
  minio-data:
